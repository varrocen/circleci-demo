version: 2.1

executors:
  docker-jdk:
    docker:
      - image: circleci/openjdk:8u232-jdk-stretch
    working_directory: ~/circleci-demo
  docker-jdk-postgres:
    docker:
      - image: circleci/openjdk:8u232-jdk-stretch
      - image: circleci/postgres:12.1-alpine-ram
        environment:
          POSTGRES_DB: circlecidemo
          POSTGRES_USER: circlecidemo
          POSTGRES_PASSWORD: circlecidemo
    working_directory: ~/circleci-demo
  docker-python:
    docker:
      - image: circleci/python:2.7

jobs:
  build:
    executor: docker-jdk
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v1-{{ .Branch }}-
            - maven-repo-v1-
      - run: mvn dependency:go-offline
      - run: mvn compile
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: .
          paths:
            - target/*
  test:
    executor: docker-jdk-postgres
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v1-{{ .Branch }}-
            - maven-repo-v1-
      - run: mvn verify
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - persist_to_workspace:
          root: .
          paths:
            - target/*
  sonar:
    executor: docker-jdk
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - sonar-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
            - sonar-v1-{{ .Branch }}-
            - sonar-v1-
      - run:
          name: Sonar analysis
          command: |
            mvn sonar:sonar \
              -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
              -Dsonar.organization=${SONAR_ORGANIZATION} \
              -Dsonar.host.url=${SONAR_HOST} \
              -Dsonar.login=${SONAR_LOGIN}
      - save_cache:
          paths:
            - ~/.m2
            - ~/.sonar/cache
          key: sonar-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
  deploy:
    executor: docker-python
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install awsebcli
          command: |
            sudo pip install awsebcli --upgrade
      - run:
          name: Create AWS credentials
          command: |
            mkdir ~/.aws
            echo "[profile eb-cli]" > ~/.aws/config
            echo "aws_access_key_id=${AWS_ACCESS_KEY_ID}" >> ~/.aws/config
            echo "aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/config
            chmod 600 ~/.aws/config
      - run: eb deploy
      - run:
          name: Save artifacts
          command: |
            mkdir -p ~/artifacts/
            find . -type f -regex ".*/target/.*jar" -exec cp {} ~/artifacts/ \;
          when: always
      - store_artifacts:
          path: ~/artifacts

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - sonar:
          requires:
            - test
      - deploy:
          filters:
            branches:
              ignore: /renovate.*/
          requires:
            - test
